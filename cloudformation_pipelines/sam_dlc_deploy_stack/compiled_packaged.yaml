Resources:
  BaseFolderbrunolabDLC:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      DirName: brunolabDLC
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  BaseFolderctnncapdevDLC:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      DirName: ctnncapdevDLC
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  BaseFolderhillmanlabDLC:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      DirName: hillmanlabDLC
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  BaseFoldermannlabDLC:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      DirName: mannlabDLC
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  BaseFoldersawtelllabDLC:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      DirName: sawtelllabDLC
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  CWPermissions:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: FigLambda
      Principal: events.amazonaws.com
    Type: AWS::Lambda::Permission
  CloudWatchBusRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: CloudwatchBusPolicy
    Type: AWS::IAM::Role
  CloudwatchBusPolicy:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action: events:*
          Effect: Allow
          Resource: '*'
          Sid: CloudWatchEventsFullAccess
        - Action: iam:PassRole
          Effect: Allow
          Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
          Sid: IAMPassRoleForCloudWatchEvents
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  DeleteCustomResource:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlc-ncap
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  FigLambda:
    Properties:
      CodeUri: s3://ctnsampackages/50fdfcb82582aa4316aba35556d707c6
      Description: Lambda Function logging start/stop for NCAP
      Events: {}
      Handler: log.eventshandler
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 90
    Type: AWS::Serverless::Function
  FignameLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${FigLambda}
    Type: AWS::Logs::LogGroup
  InFolderbrunolabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbrunolabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: brunolabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  InFolderctnncapdevDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderctnncapdevDLC
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: ctnncapdevDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  InFolderhillmanlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderhillmanlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: hillmanlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  InFoldermannlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldermannlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: mannlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  InFoldersawtelllabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldersawtelllabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: sawtelllabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LambdaBaseRole:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:*:*:*
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  LogFolderbrunolabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbrunolabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: brunolabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LogFolderctnncapdevDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderctnncapdevDLC
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: ctnncapdevDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LogFolderhillmanlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderhillmanlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: hillmanlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LogFoldermannlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldermannlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: mannlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LogFoldersawtelllabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldersawtelllabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: sawtelllabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  MainLambda:
    Properties:
      CodeUri: s3://ctnsampackages/fcf6d63af36a38325b15dbd371a6c21a
      Description: Main Lambda Function for Serverless
      Environment:
        Variables:
          AMI: ami-00b1babeb8637f5c3
          COMMAND: ls; cd /home/ubuntu; ncap_remote/dlc_rc.sh "{}" "{}" "{}" "{}";
            . ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 300
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: false
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Events:
        BucketEventbrunolabDLC:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: brunolabDLC/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
        BucketEventctnncapdevDLC:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: ctnncapdevDLC/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
        BucketEventhillmanlabDLC:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: hillmanlabDLC/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
        BucketEventmannlabDLC:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: mannlabDLC/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
        BucketEventsawtelllabDLC:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: sawtelllabDLC/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
      Handler: submit_start.handler_log_dev
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 180
    Type: AWS::Serverless::Function
  OutFolderbrunolabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbrunolabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: brunolabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  OutFolderctnncapdevDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderctnncapdevDLC
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: ctnncapdevDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  OutFolderhillmanlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderhillmanlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: hillmanlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  OutFoldermannlabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldermannlabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: mannlabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  OutFoldersawtelllabDLC:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldersawtelllabDLC
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: sawtelllabDLC/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  PipelineMainBucket:
    Properties:
      AccessControl: Private
      BucketName: dlc-ncap
    Type: AWS::S3::Bucket
  S3DelObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/e361bf58fde05fab10e5001b730a216d
      Description: Deletes Objects from S3
      Environment:
        Variables:
          AMI: ami-00b1babeb8637f5c3
          COMMAND: ls; cd /home/ubuntu; ncap_remote/dlc_rc.sh "{}" "{}" "{}" "{}";
            . ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 300
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: false
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Handler: helper.handler_deldir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  S3MakePathRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: LambdaBaseRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObject
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: write_s3_policy
    Type: AWS::IAM::Role
  S3PutObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/7058eb89756d6220f637713fc978e9ac
      Description: Puts Objects in S3
      Environment:
        Variables:
          AMI: ami-00b1babeb8637f5c3
          COMMAND: ls; cd /home/ubuntu; ncap_remote/dlc_rc.sh "{}" "{}" "{}" "{}";
            . ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 300
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: false
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Handler: helper.handler_mkdir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  UserGroupbrunolabDLC:
    Properties:
      GroupName: brunolabDLCgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - brunolabDLC/
                - brunolabDLC/inputs
                - brunolabDLC/results
                - brunolabDLC/logs
                - brunolabDLC/inputs/
                - brunolabDLC/results/
                - brunolabDLC/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - brunolabDLC/inputs/*
                - brunolabDLC/results/*
                - brunolabDLC/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/brunolabDLC/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/brunolabDLC/results/*
            - arn:aws:s3:::dlc-ncap/brunolabDLC/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: brunolabDLCpolicy
    Type: AWS::IAM::Group
  UserGroupctnncapdevDLC:
    Properties:
      GroupName: ctnncapdevDLCgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - ctnncapdevDLC/
                - ctnncapdevDLC/inputs
                - ctnncapdevDLC/results
                - ctnncapdevDLC/logs
                - ctnncapdevDLC/inputs/
                - ctnncapdevDLC/results/
                - ctnncapdevDLC/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - ctnncapdevDLC/inputs/*
                - ctnncapdevDLC/results/*
                - ctnncapdevDLC/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/ctnncapdevDLC/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/ctnncapdevDLC/results/*
            - arn:aws:s3:::dlc-ncap/ctnncapdevDLC/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: ctnncapdevDLCpolicy
    Type: AWS::IAM::Group
  UserGrouphillmanlabDLC:
    Properties:
      GroupName: hillmanlabDLCgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - hillmanlabDLC/
                - hillmanlabDLC/inputs
                - hillmanlabDLC/results
                - hillmanlabDLC/logs
                - hillmanlabDLC/inputs/
                - hillmanlabDLC/results/
                - hillmanlabDLC/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - hillmanlabDLC/inputs/*
                - hillmanlabDLC/results/*
                - hillmanlabDLC/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/hillmanlabDLC/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/hillmanlabDLC/results/*
            - arn:aws:s3:::dlc-ncap/hillmanlabDLC/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: hillmanlabDLCpolicy
    Type: AWS::IAM::Group
  UserGroupmannlabDLC:
    Properties:
      GroupName: mannlabDLCgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - mannlabDLC/
                - mannlabDLC/inputs
                - mannlabDLC/results
                - mannlabDLC/logs
                - mannlabDLC/inputs/
                - mannlabDLC/results/
                - mannlabDLC/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - mannlabDLC/inputs/*
                - mannlabDLC/results/*
                - mannlabDLC/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/mannlabDLC/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/mannlabDLC/results/*
            - arn:aws:s3:::dlc-ncap/mannlabDLC/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: mannlabDLCpolicy
    Type: AWS::IAM::Group
  UserGroupsawtelllabDLC:
    Properties:
      GroupName: sawtelllabDLCgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - sawtelllabDLC/
                - sawtelllabDLC/inputs
                - sawtelllabDLC/results
                - sawtelllabDLC/logs
                - sawtelllabDLC/inputs/
                - sawtelllabDLC/results/
                - sawtelllabDLC/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - sawtelllabDLC/inputs/*
                - sawtelllabDLC/results/*
                - sawtelllabDLC/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/sawtelllabDLC/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlc-ncap/sawtelllabDLC/results/*
            - arn:aws:s3:::dlc-ncap/sawtelllabDLC/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: sawtelllabDLCpolicy
    Type: AWS::IAM::Group
  brunolabDLCUserNet:
    Properties:
      GroupName:
        Ref: UserGroupbrunolabDLC
      Users:
      - rb2604us-east-1
      - sb4096us-east-1
      - dk2643us-east-1
    Type: AWS::IAM::UserToGroupAddition
  ctnncapdevDLCUserNet:
    Properties:
      GroupName:
        Ref: UserGroupctnncapdevDLC
      Users:
      - ta2507us-east-1
    Type: AWS::IAM::UserToGroupAddition
  hillmanlabDLCUserNet:
    Properties:
      GroupName:
        Ref: UserGrouphillmanlabDLC
      Users:
      - hillmanlabaccountus-east-1
    Type: AWS::IAM::UserToGroupAddition
  mannlabDLCUserNet:
    Properties:
      GroupName:
        Ref: UserGroupmannlabDLC
      Users:
      - sz2835us-east-1
    Type: AWS::IAM::UserToGroupAddition
  sawtelllabDLCUserNet:
    Properties:
      GroupName:
        Ref: UserGroupsawtelllabDLC
      Users:
      - aw3057us-east-1
      - raw2163us-east-1
      - hxh2001us-east-1
      - qz2311us-east-1
    Type: AWS::IAM::UserToGroupAddition
Transform: AWS::Serverless-2016-10-31
