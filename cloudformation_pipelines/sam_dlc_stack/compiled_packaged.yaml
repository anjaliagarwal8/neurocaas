Outputs:
  AccessKeytaiga2:
    Description: 'Access Key of user: taiga2 in group testergroup2'
    Value:
      Ref: userkeytaiga2
  AccessKeyuser21:
    Description: 'Access Key of user: user21 in group carcealab2'
    Value:
      Ref: userkeyuser21
  AccessKeyuser22:
    Description: 'Access Key of user: user22 in group carcealab2'
    Value:
      Ref: userkeyuser22
  Passwordtaiga2:
    Description: Default password of new user taiga2 in group testergroup2
    Value: 21817cffaf299303
  Passworduser21:
    Description: Default password of new user user21 in group carcealab2
    Value: 4e10fee13f70c743
  Passworduser22:
    Description: Default password of new user user22 in group carcealab2
    Value: a96c0d9b46ce906e
  SecretAccessKeytaiga2:
    Description: 'Secret Key of new user: taiga2 in group testergroup2'
    Value:
      Fn::GetAtt:
      - userkeytaiga2
      - SecretAccessKey
  SecretAccessKeyuser21:
    Description: 'Secret Key of new user: user21 in group carcealab2'
    Value:
      Fn::GetAtt:
      - userkeyuser21
      - SecretAccessKey
  SecretAccessKeyuser22:
    Description: 'Secret Key of new user: user22 in group carcealab2'
    Value:
      Fn::GetAtt:
      - userkeyuser22
      - SecretAccessKey
Resources:
  BaseFoldercarcealab2:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlcmonitored1
      DirName: carcealab2
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  BaseFoldertestergroup2:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlcmonitored1
      DirName: testergroup2
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  CWPermissions:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: FigLambda
      Principal: events.amazonaws.com
    Type: AWS::Lambda::Permission
  CloudWatchBusRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: CloudwatchBusPolicy
    Type: AWS::IAM::Role
  CloudwatchBusPolicy:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action: events:*
          Effect: Allow
          Resource: '*'
          Sid: CloudWatchEventsFullAccess
        - Action: iam:PassRole
          Effect: Allow
          Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
          Sid: IAMPassRoleForCloudWatchEvents
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  DeleteCustomResource:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: dlcmonitored1
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  FigLambda:
    Properties:
      CodeUri: s3://ctnsampackages/9b3b336fd28823d127909e6c1be636db
      Description: Lambda Function logging start/stop for NCAP
      Events: {}
      Handler: log.eventshandler
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 90
    Type: AWS::Serverless::Function
  FignameLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${FigLambda}
    Type: AWS::Logs::LogGroup
  InFoldercarcealab2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldercarcealab2
    Properties:
      BucketName: dlcmonitored1
      DirName: inputs
      Path: carcealab2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  InFoldertestergroup2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldertestergroup2
    Properties:
      BucketName: dlcmonitored1
      DirName: inputs
      Path: testergroup2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LambdaBaseRole:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:*:*:*
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  LogFoldercarcealab2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldercarcealab2
    Properties:
      BucketName: dlcmonitored1
      DirName: logs
      Path: carcealab2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LogFoldertestergroup2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldertestergroup2
    Properties:
      BucketName: dlcmonitored1
      DirName: logs
      Path: testergroup2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  MainLambda:
    Properties:
      CodeUri: s3://ctnsampackages/d37ffc32a90f838144e3a9652020c55e
      Description: Main Lambda Function for Serverless
      Environment:
        Variables:
          AMI: ami-0c2f1b75606210b4f
          COMMAND: cd ../../../../home/ubuntu; bin/run.sh {} "{}"
          CONFIG: config.yaml
          EXECUTION_TIMEOUT: '172800'
          IAM_ROLE: ec2-ssm
          INDIR: inputs
          INSTANCE_TYPE: p2.xlarge
          KEY_NAME: ta_testkey
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          WORKING_DIRECTORY: ~/bin
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Events:
        BucketEventcarcealab2:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: carcealab2/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
        BucketEventtestergroup2:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: testergroup2/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
      Handler: submit_start.handler
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 90
    Type: AWS::Serverless::Function
  OutFoldercarcealab2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldercarcealab2
    Properties:
      BucketName: dlcmonitored1
      DirName: results
      Path: carcealab2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  OutFoldertestergroup2:
    DependsOn:
    - PipelineMainBucket
    - BaseFoldertestergroup2
    Properties:
      BucketName: dlcmonitored1
      DirName: results
      Path: testergroup2/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  PipelineMainBucket:
    Properties:
      AccessControl: Private
      BucketName: dlcmonitored1
    Type: AWS::S3::Bucket
  S3DelObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/8a6e316416ee929a938906196cf19df2
      Description: Deletes Objects from S3
      Handler: helper.handler_deldir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  S3MakePathRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: LambdaBaseRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObject
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: write_s3_policy
    Type: AWS::IAM::Role
  S3PutObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/ddb438c72c7ea518f45b7f10837bef34
      Description: Puts Objects in S3
      Handler: helper.handler_mkdir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  UserGroupcarcealab2:
    Properties:
      GroupName: carcealab2group
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - carcealab2/
                - carcealab2/inputs
                - carcealab2/results
                - carcealab2/logs
                - carcealab2/inputs/
                - carcealab2/results/
                - carcealab2/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1
            Sid: ListBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1/carcealab2/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1/carcealab2/results/*
            - arn:aws:s3:::dlcmonitored1/carcealab2/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: carcealab2policy
    Type: AWS::IAM::Group
  UserGrouptestergroup2:
    Properties:
      GroupName: testergroup2group
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - testergroup2/
                - testergroup2/inputs
                - testergroup2/results
                - testergroup2/logs
                - testergroup2/inputs/
                - testergroup2/results/
                - testergroup2/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1
            Sid: ListBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1/testergroup2/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::dlcmonitored1/testergroup2/results/*
            - arn:aws:s3:::dlcmonitored1/testergroup2/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: testergroup2policy
    Type: AWS::IAM::Group
  carcealab2UserNet:
    Properties:
      GroupName:
        Ref: UserGroupcarcealab2
      Users:
      - Ref: carcealab2useruser21
      - Ref: carcealab2useruser22
    Type: AWS::IAM::UserToGroupAddition
  carcealab2useruser21:
    Properties:
      LoginProfile:
        Password: 4e10fee13f70c743
        PasswordResetRequired: 'false'
    Type: AWS::IAM::User
  carcealab2useruser22:
    Properties:
      LoginProfile:
        Password: a96c0d9b46ce906e
        PasswordResetRequired: 'false'
    Type: AWS::IAM::User
  testergroup2UserNet:
    Properties:
      GroupName:
        Ref: UserGrouptestergroup2
      Users:
      - Ref: testergroup2usertaiga2
    Type: AWS::IAM::UserToGroupAddition
  testergroup2usertaiga2:
    Properties:
      LoginProfile:
        Password: 21817cffaf299303
        PasswordResetRequired: 'false'
    Type: AWS::IAM::User
  userkeytaiga2:
    Properties:
      UserName:
        Ref: testergroup2usertaiga2
    Type: AWS::IAM::AccessKey
  userkeyuser21:
    Properties:
      UserName:
        Ref: carcealab2useruser21
    Type: AWS::IAM::AccessKey
  userkeyuser22:
    Properties:
      UserName:
        Ref: carcealab2useruser22
    Type: AWS::IAM::AccessKey
Transform: AWS::Serverless-2016-10-31
