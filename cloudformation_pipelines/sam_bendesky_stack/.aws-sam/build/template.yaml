Resources:
  BaseFolderbendeskylab:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: bendeskymonitored
      DirName: bendeskylab
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  CWPermissions:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: FigLambda
      Principal: events.amazonaws.com
    Type: AWS::Lambda::Permission
  CloudWatchBusRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: CloudwatchBusPolicy
    Type: AWS::IAM::Role
  CloudwatchBusPolicy:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action: events:*
          Effect: Allow
          Resource: '*'
          Sid: CloudWatchEventsFullAccess
        - Action: iam:PassRole
          Effect: Allow
          Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
          Sid: IAMPassRoleForCloudWatchEvents
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  DeleteCustomResource:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: bendeskymonitored
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  FigLambda:
    Properties:
      CodeUri: FigLambda
      Description: Lambda Function logging start/stop for NCAP
      Events: {}
      Handler: log.eventshandler
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 90
    Type: AWS::Serverless::Function
  FignameLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${FigLambda}
    Type: AWS::Logs::LogGroup
  InFolderbendeskylab:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbendeskylab
    Properties:
      BucketName: bendeskymonitored
      DirName: inputs
      Path: bendeskylab/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LambdaBaseRole:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:*:*:*
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  LogFolderbendeskylab:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbendeskylab
    Properties:
      BucketName: bendeskymonitored
      DirName: logs
      Path: bendeskylab/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  MainLambda:
    Properties:
      CodeUri: MainLambda
      Description: Main Lambda Function for Serverless
      Environment:
        Variables:
          AMI: ami-098952f040fbafbf5
          COMMAND: ls; cd /home/ubuntu; ncap_remote/run.sh "{}" "{}" "{}" "{}"; .
            ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 20
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Events:
        BucketEventbendeskylab:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: bendeskylab/inputs
                - Name: suffix
                  Value: submit.json
          Type: S3
      Handler: submit_start.handler_log
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/lambda_dataflow
      Runtime: python3.6
      Timeout: 180
    Type: AWS::Serverless::Function
  OutFolderbendeskylab:
    DependsOn:
    - PipelineMainBucket
    - BaseFolderbendeskylab
    Properties:
      BucketName: bendeskymonitored
      DirName: results
      Path: bendeskylab/
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  PipelineMainBucket:
    Properties:
      AccessControl: Private
      BucketName: bendeskymonitored
    Type: AWS::S3::Bucket
  S3DelObjectFunction:
    Properties:
      CodeUri: S3DelObjectFunction
      Description: Deletes Objects from S3
      Environment:
        Variables:
          AMI: ami-098952f040fbafbf5
          COMMAND: ls; cd /home/ubuntu; ncap_remote/run.sh "{}" "{}" "{}" "{}"; .
            ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 20
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Handler: helper.handler_deldir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  S3MakePathRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: LambdaBaseRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObject
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: write_s3_policy
    Type: AWS::IAM::Role
  S3PutObjectFunction:
    Properties:
      CodeUri: S3PutObjectFunction
      Description: Puts Objects in S3
      Environment:
        Variables:
          AMI: ami-098952f040fbafbf5
          COMMAND: ls; cd /home/ubuntu; ncap_remote/run.sh "{}" "{}" "{}" "{}"; .
            ncap_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          DEPLOY_LIMIT: 20
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: pmd-s3-ssm
          INDIR: inputs
          INSTANCE_TYPE: p3.2xlarge
          KEY_NAME: ta_testkey
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: launch-wizard-34
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          WORKING_DIRECTORY: /home/ubuntu
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
      Handler: helper.handler_mkdir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  UserGroupbendeskylab:
    Properties:
      GroupName: bendeskylabgroup
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - bendeskylab/
                - bendeskylab/inputs
                - bendeskylab/results
                - bendeskylab/logs
                - bendeskylab/inputs/
                - bendeskylab/results/
                - bendeskylab/logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::bendeskymonitored
            Sid: ListBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - bendeskylab/inputs/*
                - bendeskylab/results/*
                - bendeskylab/logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::bendeskymonitored
            Sid: ListSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::bendeskymonitored/bendeskylab/inputs/*
            Sid: Inputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::bendeskymonitored/bendeskylab/results/*
            - arn:aws:s3:::bendeskymonitored/bendeskylab/logs/*
            Sid: Outputfolderwrite
          Version: '2012-10-17'
        PolicyName: bendeskylabpolicy
    Type: AWS::IAM::Group
  bendeskylabUserNet:
    Properties:
      GroupName:
        Ref: UserGroupbendeskylab
      Users:
      - fh3050us-east-1
    Type: AWS::IAM::UserToGroupAddition
Transform: AWS::Serverless-2016-10-31
