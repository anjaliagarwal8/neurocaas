Outputs:
  AccessKeytafrontenddev1:
    Description: 'Access Key of user: tafrontenddev1 in group frontendtestgroup1'
    Value:
      Ref: userkeytafrontenddev1
  AccessKeytafrontenddev2:
    Description: 'Access Key of user: tafrontenddev2 in group frontendtestgroup2'
    Value:
      Ref: userkeytafrontenddev2
  Passwordtafrontenddev1:
    Description: Default password of new user tafrontenddev1 in group frontendtestgroup1
    Value: 2d21cb663f07bef3
  Passwordtafrontenddev2:
    Description: Default password of new user tafrontenddev2 in group frontendtestgroup2
    Value: ff212832b9c9f8a6
  SecretAccessKeytafrontenddev1:
    Description: 'Secret Key of new user: tafrontenddev1 in group frontendtestgroup1'
    Value:
      Fn::GetAtt:
      - userkeytafrontenddev1
      - SecretAccessKey
  SecretAccessKeytafrontenddev2:
    Description: 'Secret Key of new user: tafrontenddev2 in group frontendtestgroup2'
    Value:
      Fn::GetAtt:
      - userkeytafrontenddev2
      - SecretAccessKey
Resources:
  DeleteCustomResourcefrontendtestgroup1:
    DependsOn: UserBucketfrontendtestgroup1
    Properties:
      BucketName: frontendtestgroup1
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  DeleteCustomResourcefrontendtestgroup2:
    DependsOn: UserBucketfrontendtestgroup2
    Properties:
      BucketName: frontendtestgroup2
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  LambdaBaseRole:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:*:*:*
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  S3DelObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/e037bdd35508d8bcb56afcd55e50905f
      Description: Deletes Objects from S3
      Environment:
        Variables:
          EXECUTION_TIMEOUT: '172800'
          IAM_ROLE: iam role with ssm and s3 access
          INDIR: inputs
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: Type of instance to launch.
      Handler: helper.handler_deldir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  S3MakePathRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: LambdaBaseRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObject
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: write_s3_policy
    Type: AWS::IAM::Role
  S3PutObjectFunction:
    Properties:
      CodeUri: s3://ctnsampackages/85dc2f4401510307e34c065a3830b921
      Description: Puts Objects in S3
      Environment:
        Variables:
          EXECUTION_TIMEOUT: '172800'
          IAM_ROLE: iam role with ssm and s3 access
          INDIR: inputs
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: Type of instance to launch.
      Handler: helper.handler_mkdir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  UserBucketfrontendtestgroup1:
    Properties:
      AccessControl: Private
      BucketName: frontendtestgroup1
    Type: AWS::S3::Bucket
  UserBucketfrontendtestgroup2:
    Properties:
      AccessControl: Private
      BucketName: frontendtestgroup2
    Type: AWS::S3::Bucket
  UserDeleteCustomResourcefrontendtestgroup1:
    DependsOn: UserBucketfrontendtestgroup1
    Properties:
      BucketName: frontendtestgroup1
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserDeleteCustomResourcefrontendtestgroup1caimanncap:
    Properties:
      BucketName: caiman-ncap
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserDeleteCustomResourcefrontendtestgroup1dlcncap:
    Properties:
      BucketName: dlc-ncap
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserDeleteCustomResourcefrontendtestgroup2:
    DependsOn: UserBucketfrontendtestgroup2
    Properties:
      BucketName: frontendtestgroup2
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserDeleteCustomResourcefrontendtestgroup2caimanncap:
    Properties:
      BucketName: caiman-ncap
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserDeleteCustomResourcefrontendtestgroup2dlcncap:
    Properties:
      BucketName: dlc-ncap
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserGroupfrontendtestgroup1:
    Properties:
      GroupName: frontendtestgroup1group
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - inputs
                - results
                - logs
                - inputs/
                - results/
                - logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup1
            Sid: ListHomeBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - ''
                - inputs/*
                - results/*
                - logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup1
            Sid: ListHomeSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup1/inputs/*
            Sid: Homeinputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup1/results/*
            Sid: Homeoutputfolderget
          Version: '2012-10-17'
        PolicyName: frontendtestgroup1policy
    Type: AWS::IAM::Group
  UserGroupfrontendtestgroup2:
    Properties:
      GroupName: frontendtestgroup2group
      Policies:
      - PolicyDocument:
          Statement:
          - Action: s3:GetBucketLocation
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor0
          - Action: s3:HeadBucket
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor3
          - Action: s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
            Sid: VisualEditor1
          - Action: s3:ListBucket
            Condition:
              StringEquals:
                s3:delimiter:
                - /
                s3:prefix:
                - ''
                - inputs
                - results
                - logs
                - inputs/
                - results/
                - logs/
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup2
            Sid: ListHomeBucket
          - Action: s3:ListBucket
            Condition:
              StringLike:
                s3:prefix:
                - ''
                - inputs/*
                - results/*
                - logs/*
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup2
            Sid: ListHomeSubBucket
          - Action:
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup2/inputs/*
            Sid: Homeinputfolderwrite
          - Action:
            - s3:GetObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::frontendtestgroup2/results/*
            Sid: Homeoutputfolderget
          Version: '2012-10-17'
        PolicyName: frontendtestgroup2policy
    Type: AWS::IAM::Group
  UserInFolderfrontendtestgroup1:
    DependsOn: UserBucketfrontendtestgroup1
    Properties:
      BucketName: frontendtestgroup1
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserInFolderfrontendtestgroup1caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserInFolderfrontendtestgroup1dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserInFolderfrontendtestgroup2:
    DependsOn: UserBucketfrontendtestgroup2
    Properties:
      BucketName: frontendtestgroup2
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserInFolderfrontendtestgroup2caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserInFolderfrontendtestgroup2dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: inputs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup1:
    DependsOn: UserBucketfrontendtestgroup1
    Properties:
      BucketName: frontendtestgroup1
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup1caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup1dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup2:
    DependsOn: UserBucketfrontendtestgroup2
    Properties:
      BucketName: frontendtestgroup2
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup2caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserLogFolderfrontendtestgroup2dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: logs
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup1:
    DependsOn: UserBucketfrontendtestgroup1
    Properties:
      BucketName: frontendtestgroup1
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup1caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup1dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup2:
    DependsOn: UserBucketfrontendtestgroup2
    Properties:
      BucketName: frontendtestgroup2
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup2caimanncap:
    Properties:
      BucketName: caiman-ncap
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  UserOutFolderfrontendtestgroup2dlcncap:
    Properties:
      BucketName: dlc-ncap
      DirName: results
      Path: ''
      ServiceToken:
        Fn::GetAtt:
        - S3PutObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  frontendtestgroup1UserNet:
    Properties:
      GroupName:
        Ref: UserGroupfrontendtestgroup1
      Users:
      - Ref: frontendtestgroup1usertafrontenddev1
    Type: AWS::IAM::UserToGroupAddition
  frontendtestgroup1usertafrontenddev1:
    Properties:
      LoginProfile:
        Password: 2d21cb663f07bef3
        PasswordResetRequired: 'false'
      Path: /frontendtestgroup1/
      UserName: tafrontenddev1us-east-1
    Type: AWS::IAM::User
  frontendtestgroup2UserNet:
    Properties:
      GroupName:
        Ref: UserGroupfrontendtestgroup2
      Users:
      - Ref: frontendtestgroup2usertafrontenddev2
    Type: AWS::IAM::UserToGroupAddition
  frontendtestgroup2usertafrontenddev2:
    Properties:
      LoginProfile:
        Password: ff212832b9c9f8a6
        PasswordResetRequired: 'false'
      Path: /frontendtestgroup2/
      UserName: tafrontenddev2us-east-1
    Type: AWS::IAM::User
  userkeytafrontenddev1:
    Properties:
      UserName:
        Ref: frontendtestgroup1usertafrontenddev1
    Type: AWS::IAM::AccessKey
  userkeytafrontenddev2:
    Properties:
      UserName:
        Ref: frontendtestgroup2usertafrontenddev2
    Type: AWS::IAM::AccessKey
Transform: AWS::Serverless-2016-10-31
