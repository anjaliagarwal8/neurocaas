{
    "Resources": {
        "BaseFolderbrunolabCAIMAN": {
            "DependsOn": "PipelineMainBucket",
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "brunolabCAIMAN",
                "Path": "",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "BaseFolderpeterkagroupCAIMAN": {
            "DependsOn": "PipelineMainBucket",
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "peterkagroupCAIMAN",
                "Path": "",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "BaseFolderwooleylabCAIMAN": {
            "DependsOn": "PipelineMainBucket",
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "wooleylabCAIMAN",
                "Path": "",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "CWPermissions": {
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "FigLambda"
                },
                "Principal": "events.amazonaws.com"
            },
            "Type": "AWS::Lambda::Permission"
        },
        "CloudWatchBusRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "events.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "CloudwatchBusPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "CloudwatchBusPolicy": {
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        " ",
                        [
                            "Base Policy for all lambda function roles in",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "events:*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "CloudWatchEventsFullAccess"
                        },
                        {
                            "Action": "iam:PassRole",
                            "Effect": "Allow",
                            "Resource": "arn:aws:iam::*:role/AWS_Events_Invoke_Targets",
                            "Sid": "IAMPassRoleForCloudWatchEvents"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "Type": "AWS::IAM::ManagedPolicy"
        },
        "DeleteCustomResource": {
            "DependsOn": "PipelineMainBucket",
            "Properties": {
                "BucketName": "caiman-ncap",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3DelObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "FigLambda": {
            "Properties": {
                "CodeUri": "../lambda_repo",
                "Description": "Lambda Function logging start/stop for NCAP",
                "Events": {},
                "Handler": "log.eventshandler",
                "MemorySize": 128,
                "Role": "arn:aws:iam::739988523141:role/lambda_dataflow",
                "Runtime": "python3.6",
                "Timeout": 90
            },
            "Type": "AWS::Serverless::Function"
        },
        "FignameLogGroup": {
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${FigLambda}"
                }
            },
            "Type": "AWS::Logs::LogGroup"
        },
        "InFolderbrunolabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderbrunolabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "inputs",
                "Path": "brunolabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "InFolderpeterkagroupCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderpeterkagroupCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "inputs",
                "Path": "peterkagroupCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "InFolderwooleylabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderwooleylabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "inputs",
                "Path": "wooleylabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "LambdaBaseRole": {
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        " ",
                        [
                            "Base Policy for all lambda function roles in",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:logs:*:*:*"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "Type": "AWS::IAM::ManagedPolicy"
        },
        "LogFolderbrunolabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderbrunolabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "logs",
                "Path": "brunolabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "LogFolderpeterkagroupCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderpeterkagroupCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "logs",
                "Path": "peterkagroupCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "LogFolderwooleylabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderwooleylabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "logs",
                "Path": "wooleylabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "MainLambda": {
            "Properties": {
                "CodeUri": "../lambda_repo",
                "Description": "Main Lambda Function for Serverless",
                "Environment": {
                    "Variables": {
                        "AMI": "ami-0db5492c69f5a77aa",
                        "COMMAND": "ls; cd /home/ubuntu; bin/run.sh \"{}\" \"{}\" \"{}\"",
                        "CONFIG": "config.yaml",
                        "EXECUTION_TIMEOUT": 180,
                        "IAM_ROLE": "pmd-s3-ssm",
                        "INDIR": "inputs",
                        "INSTANCE_TYPE": "m5.16xlarge",
                        "KEY_NAME": "ta_testkey",
                        "LAUNCH": true,
                        "LOGDIR": "logs",
                        "LOGFILE": "lambda_log.txt",
                        "MISSING_CONFIG_ERROR": "We need a config file to analyze data.",
                        "MONITOR": false,
                        "OUTDIR": "results",
                        "REGION": "us-east-1",
                        "SECURITY_GROUPS": "launch-wizard-tcp",
                        "SHUTDOWN_BEHAVIOR": "terminate",
                        "SSM_TIMEOUT": 172000,
                        "WORKING_DIRECTORY": "~/bin",
                        "cwrolearn": {
                            "Fn::GetAtt": [
                                "CloudWatchBusRole",
                                "Arn"
                            ]
                        },
                        "figlambarn": {
                            "Fn::GetAtt": [
                                "FigLambda",
                                "Arn"
                            ]
                        },
                        "figlambid": {
                            "Ref": "FigLambda"
                        }
                    }
                },
                "Events": {
                    "BucketEventbrunolabCAIMAN": {
                        "Properties": {
                            "Bucket": {
                                "Ref": "PipelineMainBucket"
                            },
                            "Events": [
                                "s3:ObjectCreated:*"
                            ],
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "brunolabCAIMAN/inputs"
                                        },
                                        {
                                            "Name": "suffix",
                                            "Value": "submit.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "Type": "S3"
                    },
                    "BucketEventpeterkagroupCAIMAN": {
                        "Properties": {
                            "Bucket": {
                                "Ref": "PipelineMainBucket"
                            },
                            "Events": [
                                "s3:ObjectCreated:*"
                            ],
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "peterkagroupCAIMAN/inputs"
                                        },
                                        {
                                            "Name": "suffix",
                                            "Value": "submit.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "Type": "S3"
                    },
                    "BucketEventwooleylabCAIMAN": {
                        "Properties": {
                            "Bucket": {
                                "Ref": "PipelineMainBucket"
                            },
                            "Events": [
                                "s3:ObjectCreated:*"
                            ],
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "wooleylabCAIMAN/inputs"
                                        },
                                        {
                                            "Name": "suffix",
                                            "Value": "submit.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "Type": "S3"
                    }
                },
                "Handler": "submit_start.handler",
                "MemorySize": 128,
                "Role": "arn:aws:iam::739988523141:role/lambda_dataflow",
                "Runtime": "python3.6",
                "Timeout": 180
            },
            "Type": "AWS::Serverless::Function"
        },
        "OutFolderbrunolabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderbrunolabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "results",
                "Path": "brunolabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "OutFolderpeterkagroupCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderpeterkagroupCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "results",
                "Path": "peterkagroupCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "OutFolderwooleylabCAIMAN": {
            "DependsOn": [
                "PipelineMainBucket",
                "BaseFolderwooleylabCAIMAN"
            ],
            "Properties": {
                "BucketName": "caiman-ncap",
                "DirName": "results",
                "Path": "wooleylabCAIMAN/",
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "PipelineMainBucket": {
            "Properties": {
                "AccessControl": "Private",
                "BucketName": "caiman-ncap"
            },
            "Type": "AWS::S3::Bucket"
        },
        "S3DelObjectFunction": {
            "Properties": {
                "CodeUri": "../lambda_repo",
                "Description": "Deletes Objects from S3",
                "Environment": {
                    "Variables": {
                        "AMI": "ami-0db5492c69f5a77aa",
                        "COMMAND": "ls; cd /home/ubuntu; bin/run.sh \"{}\" \"{}\" \"{}\"",
                        "CONFIG": "config.yaml",
                        "EXECUTION_TIMEOUT": 180,
                        "IAM_ROLE": "pmd-s3-ssm",
                        "INDIR": "inputs",
                        "INSTANCE_TYPE": "m5.16xlarge",
                        "KEY_NAME": "ta_testkey",
                        "LAUNCH": true,
                        "LOGDIR": "logs",
                        "LOGFILE": "lambda_log.txt",
                        "MISSING_CONFIG_ERROR": "We need a config file to analyze data.",
                        "MONITOR": false,
                        "OUTDIR": "results",
                        "REGION": "us-east-1",
                        "SECURITY_GROUPS": "launch-wizard-tcp",
                        "SHUTDOWN_BEHAVIOR": "terminate",
                        "SSM_TIMEOUT": 172000,
                        "WORKING_DIRECTORY": "~/bin",
                        "cwrolearn": {
                            "Fn::GetAtt": [
                                "CloudWatchBusRole",
                                "Arn"
                            ]
                        },
                        "figlambarn": {
                            "Fn::GetAtt": [
                                "FigLambda",
                                "Arn"
                            ]
                        },
                        "figlambid": {
                            "Ref": "FigLambda"
                        }
                    }
                },
                "Handler": "helper.handler_deldir",
                "Role": {
                    "Fn::GetAtt": [
                        "S3MakePathRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": 30
            },
            "Type": "AWS::Serverless::Function"
        },
        "S3MakePathRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "LambdaBaseRole"
                    }
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:DeleteObject",
                                        "s3:ListBucket",
                                        "s3:PutObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "write_s3_policy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "S3PutObjectFunction": {
            "Properties": {
                "CodeUri": "../lambda_repo",
                "Description": "Puts Objects in S3",
                "Environment": {
                    "Variables": {
                        "AMI": "ami-0db5492c69f5a77aa",
                        "COMMAND": "ls; cd /home/ubuntu; bin/run.sh \"{}\" \"{}\" \"{}\"",
                        "CONFIG": "config.yaml",
                        "EXECUTION_TIMEOUT": 180,
                        "IAM_ROLE": "pmd-s3-ssm",
                        "INDIR": "inputs",
                        "INSTANCE_TYPE": "m5.16xlarge",
                        "KEY_NAME": "ta_testkey",
                        "LAUNCH": true,
                        "LOGDIR": "logs",
                        "LOGFILE": "lambda_log.txt",
                        "MISSING_CONFIG_ERROR": "We need a config file to analyze data.",
                        "MONITOR": false,
                        "OUTDIR": "results",
                        "REGION": "us-east-1",
                        "SECURITY_GROUPS": "launch-wizard-tcp",
                        "SHUTDOWN_BEHAVIOR": "terminate",
                        "SSM_TIMEOUT": 172000,
                        "WORKING_DIRECTORY": "~/bin",
                        "cwrolearn": {
                            "Fn::GetAtt": [
                                "CloudWatchBusRole",
                                "Arn"
                            ]
                        },
                        "figlambarn": {
                            "Fn::GetAtt": [
                                "FigLambda",
                                "Arn"
                            ]
                        },
                        "figlambid": {
                            "Ref": "FigLambda"
                        }
                    }
                },
                "Handler": "helper.handler_mkdir",
                "Role": {
                    "Fn::GetAtt": [
                        "S3MakePathRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": 30
            },
            "Type": "AWS::Serverless::Function"
        },
        "UserGroupbrunolabCAIMAN": {
            "Properties": {
                "GroupName": "brunolabCAIMANgroup",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "s3:GetBucketLocation",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor0"
                                },
                                {
                                    "Action": "s3:HeadBucket",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor3"
                                },
                                {
                                    "Action": "s3:ListAllMyBuckets",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor1"
                                },
                                {
                                    "Action": "s3:ListBucket",
                                    "Condition": {
                                        "StringEquals": {
                                            "s3:delimiter": [
                                                "/"
                                            ],
                                            "s3:prefix": [
                                                "",
                                                "brunolabCAIMAN/",
                                                "brunolabCAIMAN/inputs",
                                                "brunolabCAIMAN/results",
                                                "brunolabCAIMAN/logs",
                                                "brunolabCAIMAN/inputs/",
                                                "brunolabCAIMAN/results/",
                                                "brunolabCAIMAN/logs/"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap"
                                    ],
                                    "Sid": "ListBucket"
                                },
                                {
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/brunolabCAIMAN/inputs/*"
                                    ],
                                    "Sid": "Inputfolderwrite"
                                },
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/brunolabCAIMAN/results/*",
                                        "arn:aws:s3:::caiman-ncap/brunolabCAIMAN/logs/*"
                                    ],
                                    "Sid": "Outputfolderwrite"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "brunolabCAIMANpolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Group"
        },
        "UserGrouppeterkagroupCAIMAN": {
            "Properties": {
                "GroupName": "peterkagroupCAIMANgroup",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "s3:GetBucketLocation",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor0"
                                },
                                {
                                    "Action": "s3:HeadBucket",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor3"
                                },
                                {
                                    "Action": "s3:ListAllMyBuckets",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor1"
                                },
                                {
                                    "Action": "s3:ListBucket",
                                    "Condition": {
                                        "StringEquals": {
                                            "s3:delimiter": [
                                                "/"
                                            ],
                                            "s3:prefix": [
                                                "",
                                                "peterkagroupCAIMAN/",
                                                "peterkagroupCAIMAN/inputs",
                                                "peterkagroupCAIMAN/results",
                                                "peterkagroupCAIMAN/logs",
                                                "peterkagroupCAIMAN/inputs/",
                                                "peterkagroupCAIMAN/results/",
                                                "peterkagroupCAIMAN/logs/"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap"
                                    ],
                                    "Sid": "ListBucket"
                                },
                                {
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/peterkagroupCAIMAN/inputs/*"
                                    ],
                                    "Sid": "Inputfolderwrite"
                                },
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/peterkagroupCAIMAN/results/*",
                                        "arn:aws:s3:::caiman-ncap/peterkagroupCAIMAN/logs/*"
                                    ],
                                    "Sid": "Outputfolderwrite"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "peterkagroupCAIMANpolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Group"
        },
        "UserGroupwooleylabCAIMAN": {
            "Properties": {
                "GroupName": "wooleylabCAIMANgroup",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "s3:GetBucketLocation",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor0"
                                },
                                {
                                    "Action": "s3:HeadBucket",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor3"
                                },
                                {
                                    "Action": "s3:ListAllMyBuckets",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor1"
                                },
                                {
                                    "Action": "s3:ListBucket",
                                    "Condition": {
                                        "StringEquals": {
                                            "s3:delimiter": [
                                                "/"
                                            ],
                                            "s3:prefix": [
                                                "",
                                                "wooleylabCAIMAN/",
                                                "wooleylabCAIMAN/inputs",
                                                "wooleylabCAIMAN/results",
                                                "wooleylabCAIMAN/logs",
                                                "wooleylabCAIMAN/inputs/",
                                                "wooleylabCAIMAN/results/",
                                                "wooleylabCAIMAN/logs/"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap"
                                    ],
                                    "Sid": "ListBucket"
                                },
                                {
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/wooleylabCAIMAN/inputs/*"
                                    ],
                                    "Sid": "Inputfolderwrite"
                                },
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::caiman-ncap/wooleylabCAIMAN/results/*",
                                        "arn:aws:s3:::caiman-ncap/wooleylabCAIMAN/logs/*"
                                    ],
                                    "Sid": "Outputfolderwrite"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "wooleylabCAIMANpolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Group"
        },
        "brunolabCAIMANUserNet": {
            "Properties": {
                "GroupName": {
                    "Ref": "UserGroupbrunolabCAIMAN"
                },
                "Users": [
                    "rb2604us-east-1",
                    "sb4096us-east-1",
                    "dk2643us-east-1"
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        },
        "peterkagroupCAIMANUserNet": {
            "Properties": {
                "GroupName": {
                    "Ref": "UserGrouppeterkagroupCAIMAN"
                },
                "Users": [
                    "dspus-east-1",
                    "va2371us-east-1",
                    "ioc2104us-east-1"
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        },
        "wooleylabCAIMANUserNet": {
            "Properties": {
                "GroupName": {
                    "Ref": "UserGroupwooleylabCAIMAN"
                },
                "Users": [
                    "sw2277us-east-1"
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        }
    },
    "Transform": "AWS::Serverless-2016-10-31"
}
