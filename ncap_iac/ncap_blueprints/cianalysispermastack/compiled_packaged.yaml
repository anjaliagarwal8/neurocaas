Resources:
  CWPermissions:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: FigLambda
      Principal: events.amazonaws.com
    Type: AWS::Lambda::Permission
  CloudWatchBusRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: CloudwatchBusPolicy
    Type: AWS::IAM::Role
  CloudwatchBusPolicy:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action: events:*
          Effect: Allow
          Resource: '*'
          Sid: CloudWatchEventsFullAccess
        - Action: iam:PassRole
          Effect: Allow
          Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
          Sid: IAMPassRoleForCloudWatchEvents
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  DeleteCustomResource:
    DependsOn: PipelineMainBucket
    Properties:
      BucketName: cianalysispermastack
      ServiceToken:
        Fn::GetAtt:
        - S3DelObjectFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
  FigLambda:
    Properties:
      CodeUri: s3://neurocaas-cfn-deployment-resources739988523141/262b6889d582756c3cd2e84048ecfe54
      Description: Lambda Function logging start/stop for NCAP
      Environment:
        Variables:
          BUCKET_NAME: cianalysispermastack
          INDIR: inputs
          REGION: us-east-1
      Events: {}
      Handler: log.monitor_updater
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/testutilsstack-LambdaRole-1I7AHKZQN6WOJ
      Runtime: python3.6
      Timeout: 90
    Type: AWS::Serverless::Function
  FignameLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${FigLambda}
    Type: AWS::Logs::LogGroup
  LambdaBaseRole:
    Properties:
      Description:
        Fn::Join:
        - ' '
        - - Base Policy for all lambda function roles in
          - Ref: AWS::StackName
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:*:*:*
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  MainLambda:
    Properties:
      CodeUri: s3://neurocaas-cfn-deployment-resources739988523141/fe3ae5e2d9a74db0740bbaa02c5659e8
      Description: Main Lambda Function for Serverless
      Environment:
        Variables:
          AMI: ami-061f98a1f90c0d6fd
          COMMAND: cd /home/ubuntu; neurocaas_remote/run_main.sh "{}" "{}" "{}" "{}";
            . neurocaas_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          CONFIGDIR: configs
          DEPLOY_LIMIT: 100
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: SSMRole
          INDIR: inputs
          INSTANCE_TYPE: t2.micro
          KEY_NAME: testkeystack-custom-dev-key-pair
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MAXCOST: '300'
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: testsgstack-SecurityGroupDeploy-C2Q3PGSF77Y3
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          SUBMITDIR: submissions
          WORKING_DIRECTORY: ~/bin
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
          versionid: 'fa054d7477aa1debda7b35e1f82aa17cc958b24d

            '
      Events:
        BucketEventSubmit:
          Properties:
            Bucket:
              Ref: PipelineMainBucket
            Events:
            - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: suffix
                  Value: submit.json
          Type: S3
      Handler: submit_start.handler_develop
      MemorySize: 128
      Role: arn:aws:iam::739988523141:role/testutilsstack-LambdaRole-1I7AHKZQN6WOJ
      Runtime: python3.6
      Timeout: 180
    Type: AWS::Serverless::Function
  PipelineMainBucket:
    Properties:
      AccessControl: Private
      BucketName: cianalysispermastack
    Type: AWS::S3::Bucket
  S3DelObjectFunction:
    Properties:
      CodeUri: s3://neurocaas-cfn-deployment-resources739988523141/6d26dcc89331d17ecfbb22c62f51faac
      Description: Deletes Objects from S3
      Environment:
        Variables:
          AMI: ami-061f98a1f90c0d6fd
          COMMAND: cd /home/ubuntu; neurocaas_remote/run_main.sh "{}" "{}" "{}" "{}";
            . neurocaas_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          CONFIGDIR: configs
          DEPLOY_LIMIT: 100
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: SSMRole
          INDIR: inputs
          INSTANCE_TYPE: t2.micro
          KEY_NAME: testkeystack-custom-dev-key-pair
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MAXCOST: '300'
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: testsgstack-SecurityGroupDeploy-C2Q3PGSF77Y3
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          SUBMITDIR: submissions
          WORKING_DIRECTORY: ~/bin
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
          versionid: 'fa054d7477aa1debda7b35e1f82aa17cc958b24d

            '
      Handler: helper.handler_delbucket
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  S3MakePathRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Ref: LambdaBaseRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObject
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: write_s3_policy
    Type: AWS::IAM::Role
  S3PutObjectFunction:
    Properties:
      CodeUri: s3://neurocaas-cfn-deployment-resources739988523141/de1cf3fdadf507a273009c91012dfd62
      Description: Puts Objects in S3
      Environment:
        Variables:
          AMI: ami-061f98a1f90c0d6fd
          COMMAND: cd /home/ubuntu; neurocaas_remote/run_main.sh "{}" "{}" "{}" "{}";
            . neurocaas_remote/ncap_utils/workflow.sh; cleanup
          CONFIG: config.yaml
          CONFIGDIR: configs
          DEPLOY_LIMIT: 100
          EXECUTION_TIMEOUT: 180
          IAM_ROLE: SSMRole
          INDIR: inputs
          INSTANCE_TYPE: t2.micro
          KEY_NAME: testkeystack-custom-dev-key-pair
          LAUNCH: true
          LOGDIR: logs
          LOGFILE: lambda_log.txt
          MAXCOST: '300'
          MISSING_CONFIG_ERROR: We need a config file to analyze data.
          MONITOR: true
          OUTDIR: results
          REGION: us-east-1
          SECURITY_GROUPS: testsgstack-SecurityGroupDeploy-C2Q3PGSF77Y3
          SHUTDOWN_BEHAVIOR: terminate
          SSM_TIMEOUT: 172000
          SUBMITDIR: submissions
          WORKING_DIRECTORY: ~/bin
          cwrolearn:
            Fn::GetAtt:
            - CloudWatchBusRole
            - Arn
          figlambarn:
            Fn::GetAtt:
            - FigLambda
            - Arn
          figlambid:
            Ref: FigLambda
          versionid: 'fa054d7477aa1debda7b35e1f82aa17cc958b24d

            '
      Handler: helper.handler_mkdir
      Role:
        Fn::GetAtt:
        - S3MakePathRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  UserSubstack0:
    DependsOn:
    - PipelineMainBucket
    - S3PutObjectFunction
    - S3DelObjectFunction
    Properties:
      Parameters:
        BucketName: cianalysispermastack
        MakeFuncArn:
          Fn::GetAtt:
          - S3PutObjectFunction
          - Arn
        Name: traviscipermagroup
        UserNames: cipermauser1us-east-1,cipermauser2us-east-1
      TemplateURL: https://s3.amazonaws.com/neurocaas-cfn-deployment-resources739988523141/4d981a299d2e88e23b87902288bb374f.template
    Type: AWS::CloudFormation::Stack
Transform: AWS::Serverless-2016-10-31
